#!/bin/bash

# This script creates this script: 9_gdal_merge_tiles.script.

IN_PATH_BASE=`cat ../../input_files_info/topo_filepath.dat`

SCALE_PATH=`cat outputs/6_grid_scale.dat`

IN_PATH=$IN_PATH_BASE$SCALE_PATH

fname_in_file="outputs/7_ll_file_list.dat"

fname_out_file="9_gdal_merge_tiles.script"

backslash=" \\"

# zero out the file.
> $fname_out_file

# build the merge script.
echo "#!/bin/bash" > $fname_out_file
echo >> $fname_out_file
echo "ulimit -n 4096" >> $fname_out_file
echo >> $fname_out_file
echo "# Merge these files using gdalwarp." >> $fname_out_file
echo >> $fname_out_file
echo "gdalwarp \\" >> $fname_out_file

file_count=0

while read tile_id
do

# Note that here I am redirecting the error message that says
#   "file not found" to /dev/null so the errors are not printed
#   to the screen.
  fname_full=`ls -1 $IN_PATH*$tile_id* 2>/dev/null`

# echo $fname_full$backslash

# This is checking to see if the file exists, and if it does,
#   then it prints it to the file.
  if [ -f "$fname_full" ]
  then
    file_count=$((file_count+1))
    echo $fname_full$backslash >> $fname_out_file
  fi

done < ${fname_in_file}

echo "outputs/9_merged_ll_tiles.tif" >> $fname_out_file

echo >> $fname_out_file

chmod u+x $fname_out_file

# Here I am making sure the gdal merge script can handle the
#   required number of open files.

ulimit_soft=`ulimit -Sn`
ulimit_hard=`ulimit -Hn`

echo " "
echo "ulimit soft = "$ulimit_soft
echo "ulimit hard = "$ulimit_hard
echo "file count  = "$file_count

if [ "$file_count" -ge "$ulimit_soft" ]; then
  echo "  setting ulimit_soft to ulimit_hard"
  echo "    this must be bigger than the file count"
  ulimit -Sn $ulimit_hard
  ulimit_soft=`ulimit -Sn`
  echo "ulimit soft = "$ulimit_soft
fi

if [ "$file_count" -ge "$ulimit_hard" ]; then
  echo " "
  echo "ULIMIT IS NOT BIG ENOUGH TO PROCESS THIS MANY FILES"
  echo "ULIMIT IS NOT BIG ENOUGH TO PROCESS THIS MANY FILES"
  echo "ULIMIT IS NOT BIG ENOUGH TO PROCESS THIS MANY FILES"
  echo "ULIMIT IS NOT BIG ENOUGH TO PROCESS THIS MANY FILES"
  echo "ULIMIT IS NOT BIG ENOUGH TO PROCESS THIS MANY FILES"
  echo " "
  echo "YOU MUST FIND ANOTHER WAY TO DO THIS, LIKE MERGE A"
  echo "SUBSET OF THE FILES, AND THEN MERGE THOSE SUBSETS."
  echo " "
fi

